@model tp1_module_6.Models.SamouraisVm
<h4>Samourai</h4>
<hr />
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="container">

    <div class="form-group row">
        @Html.LabelFor(model => model.samourai.Force, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">


            @if (Model.armes != null && Model.armes.Count() > 0)
            {
                @Html.EditorFor(model => model.samourai.Force, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.samourai.Force, "", new { @class = "text-danger" })
            }
            else
            {
                @Html.DisplayFor(model => model.samourai.Force)
            }
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.samourai.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.armes != null && Model.armes.Count() > 0)
            {
                @Html.EditorFor(model => model.samourai.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.samourai.Nom, "", new { @class = "text-danger" })
            }
            else
            {
                @Html.DisplayFor(model => model.samourai.Nom)
            }
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.samourai.Arme, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.armes != null && Model.armes.Count() > 0)
            {
                @Html.DropDownListFor(model => model.idArmes, Model.armes.Select(x => new SelectListItem { Text = x.Nom, Value = x.Id.ToString() }), "Pas besoin d'une arme", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idArmes, "", new { @class = "text-danger" })
            }
            else
            {
                @Html.DisplayFor(model => model.samourai.Arme.Nom)
            }

        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.samourai.ArtMatials, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.artMartials != null && Model.artMartials.Count() > 0)
            {
                @Html.ListBoxFor(model => model.idArtMartials, Model.artMartials.Select(x => new SelectListItem { Text = x.Nom, Value = x.Id.ToString() }), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idArtMartials, "", new { @class = "text-danger" })
            }
            else
            if (Model.samourai != null)
            {
                @Html.ListBoxFor(model => model.samourai.ArtMatials, Model.samourai.ArtMatials.Select(x => new SelectListItem() { Text = x.Nom }), new { @class = "form-control", @disabled = "disabled" })
            }

        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.samourai.potentiel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.artMartials != null && Model.artMartials.Count() > 0)
            {
            }
            else
            if (Model.samourai != null)
            {
                @Html.DisplayFor(model => model.samourai.potentiel)
            }

        </div>
    </div>
</div>
